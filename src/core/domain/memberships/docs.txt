Caso de uso de Reserve Hot desk:
1 -> Verificar que el usuario no tiene ya una resrva para esa dia (no puede tener 2). Utilizar 
repositorio de Reservations. (HTTP 409 Conflict) en caso de fallar "DuplicateReservationError".

2 -> Consultar el bounded context de Memberships para obtener los datos de la membresía del usuario,
sobretodo nos interesa el número de créditos restantes, si remainingCredits es mayor que 0, la reserva
 se marcará como incluida en la membresía.

entrada json {
    -	userId:string,
    -	date: formato YYYY-MM-DD
}

creamos entidad HotDesktopReservation {
-	id: Identificador único generado automáticamente (por ejemplo, UUID).
-	userId: Identificador del usuario, valor recibido en el input.
-	date: Fecha de la reserva, en formato ISO 8601 (YYYY-MM-DD).
-	status: Estado de la reserva, asignado inicialmente como "Active".
-	includedInMembership: Booleano que indica si la reserva está cubierta por el paquete prepagado, determinado en función de los datos de Memberships.
-	createdAt: Fecha y hora de creación, generada automáticamente en formato ISO 8601 extendido (YYYY-MM-DDThh:mm:ss).
-	updatedAt: Fecha y hora de la última actualización, generada automáticamente en el mismo formato.

}

Flujo:
-> Excepciones - OK
-> Value objects - OK
-> Entidad + Repo interface - OK
-> Caso de uso de Reservar el hot desk - OK
-> API controller
